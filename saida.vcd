$date
	Sun Aug 11 19:00:27 2024
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module tb_Processador $end
$scope module processa $end
$var wire 1 ! clock $end
$var wire 1 " reset $end
$var wire 1 # sinal_mux $end
$var wire 32 $ valor_reg2 [31:0] $end
$var wire 32 % valor_reg1 [31:0] $end
$var wire 32 & valor2 [31:0] $end
$var wire 1 ' sinal_leitura $end
$var wire 1 ( sinal_escrita $end
$var wire 1 ) resultado_desvio $end
$var wire 32 * resultado_alu [31:0] $end
$var wire 1 + reg_escrita $end
$var wire 4 , operacao_selecionada [3:0] $end
$var wire 7 - opcode [6:0] $end
$var wire 32 . instrucao_saida [31:0] $end
$var wire 32 / imm_estendido [31:0] $end
$var wire 7 0 funct7 [6:0] $end
$var wire 3 1 funct3 [2:0] $end
$var wire 32 2 endereco_soma4 [31:0] $end
$var wire 32 3 endereco_saida [31:0] $end
$var wire 5 4 endereco_regd [4:0] $end
$var wire 5 5 endereco_reg2 [4:0] $end
$var wire 5 6 endereco_reg1 [4:0] $end
$var wire 32 7 endereco_pc [31:0] $end
$var wire 32 8 endereco_desvio [31:0] $end
$var wire 32 9 dado_saida [31:0] $end
$var wire 32 : dado_escrita [31:0] $end
$var wire 1 ; branch $end
$var wire 1 < MemToReg $end
$var wire 2 = ALUop [1:0] $end
$var wire 1 > ALUSrc $end
$scope module alu_inst $end
$var wire 1 ! clock $end
$var wire 32 ? valor2 [31:0] $end
$var wire 32 @ valor1 [31:0] $end
$var wire 4 A resultado_alu_control [3:0] $end
$var reg 32 B resultado_alu [31:0] $end
$var reg 1 ) resultado_desvio $end
$upscope $end
$scope module alucontrol_inst $end
$var wire 3 C funct3 [2:0] $end
$var wire 2 D ALUop [1:0] $end
$var reg 4 E operacao_selecionada [3:0] $end
$upscope $end
$scope module controle_inst $end
$var wire 7 F opcode [6:0] $end
$var wire 7 G funct7 [6:0] $end
$var wire 3 H funct3 [2:0] $end
$var reg 1 > ALUSrc $end
$var reg 2 I ALUop [1:0] $end
$var reg 1 < MemToReg $end
$var reg 1 ; branch $end
$var reg 1 + reg_escrita $end
$var reg 1 ( sinal_escrita $end
$var reg 1 ' sinal_leitura $end
$upscope $end
$scope module immgen_inst $end
$var wire 7 J opcode [6:0] $end
$var wire 32 K instrucao [31:0] $end
$var reg 32 L imm_estendido [31:0] $end
$upscope $end
$scope module mem_inst $end
$var wire 32 M endereco [31:0] $end
$var reg 3 N funct3 [2:0] $end
$var reg 7 O funct7 [6:0] $end
$var reg 32 P instrucao_saida [31:0] $end
$var reg 7 Q opcode [6:0] $end
$var reg 5 R rd [4:0] $end
$var reg 5 S rs1 [4:0] $end
$var reg 5 T rs2 [4:0] $end
$upscope $end
$scope module memdados_inst $end
$var wire 1 ! clock $end
$var wire 32 U endereco [31:0] $end
$var wire 1 ( sinal_escrita $end
$var wire 1 ' sinal_leitura $end
$var wire 32 V valor_reg2 [31:0] $end
$var reg 1 W byte $end
$var reg 32 X dado_saida [31:0] $end
$var reg 6 Y temp [5:0] $end
$upscope $end
$scope module muxalu_inst $end
$var wire 1 > sinal_mux $end
$var wire 32 Z valor2 [31:0] $end
$var wire 32 [ valor1 [31:0] $end
$var wire 32 \ endereco_saida [31:0] $end
$upscope $end
$scope module muxmemreg_inst $end
$var wire 1 < sinal_mux $end
$var wire 32 ] valor1 [31:0] $end
$var wire 32 ^ valor2 [31:0] $end
$var wire 32 _ endereco_saida [31:0] $end
$upscope $end
$scope module muxpc_inst $end
$var wire 1 # sinal_mux $end
$var wire 32 ` valor1 [31:0] $end
$var wire 32 a valor2 [31:0] $end
$var wire 32 b endereco_saida [31:0] $end
$upscope $end
$scope module pc_inst $end
$var wire 1 ! clock $end
$var wire 32 c endereco_pc [31:0] $end
$var wire 1 " reset $end
$var reg 32 d endereco_saida [31:0] $end
$upscope $end
$scope module reg_inst $end
$var wire 1 ! clock $end
$var wire 32 e dado_escrita [31:0] $end
$var wire 5 f endereco_reg1 [4:0] $end
$var wire 5 g endereco_reg2 [4:0] $end
$var wire 5 h endereco_regd [4:0] $end
$var wire 1 + reg_escrita $end
$var reg 32 i valor_reg1 [31:0] $end
$var reg 32 j valor_reg2 [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx j
bx i
bx h
bx g
bx f
bx e
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
b0 ]
bx \
bx [
b0 Z
b0 Y
bx X
0W
bx V
b0 U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
b0 L
bx K
bz J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
b0 B
bx A
bx @
bx ?
x>
bx =
x<
x;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
b0 /
bx .
bx -
bx ,
x+
b0 *
0)
x(
x'
bx &
bx %
bx $
0#
1"
0!
$end
#10
b10000000110110011 .
b10000000110110011 K
b10000000110110011 P
b100 7
b100 b
b100 c
b100 2
b100 `
b0 8
b0 a
b0 3
b0 M
b0 d
1!
#20
0!
#30
1!
#40
0!
#50
1!
#60
0!
#70
1!
#80
0!
#90
1!
#100
0!
0"
#110
b0 :
b0 _
b0 e
0<
0;
0>
1+
0(
0'
b10 =
b10 D
b10 I
b10 ,
b10 A
b10 E
b0 1
b0 C
b0 H
b0 N
b110011 -
b110011 F
b110011 Q
b1000 7
b1000 b
b1000 c
b1000 2
b1000 `
b100 8
b100 a
b100 3
b100 M
b100 d
1!
#120
xW
bx Y
bx :
bx _
bx e
bx *
bx B
bx U
bx ]
0!
#130
b0 &
b0 ?
b0 \
b0 $
b0 V
b0 [
b0 j
b1 %
b1 @
b1 i
b11 4
b11 R
b11 h
b0 5
b0 T
b0 g
b10 6
b10 S
b10 f
b0 0
b0 G
b0 O
b110111010000010011 .
b110111010000010011 K
b110111010000010011 P
b1100 7
b1100 b
b1100 c
b1100 2
b1100 `
b1000 8
b1000 a
b1000 3
b1000 M
b1000 d
1!
#140
0W
b0 Y
b1 :
b1 _
b1 e
b1 *
b1 B
b1 U
b1 ]
0!
#150
b0 ,
b0 A
b0 E
1>
b11 =
b11 D
b11 I
b10101011 %
b10101011 @
b10101011 i
b1000 4
b1000 R
b1000 h
b110 6
b110 S
b110 f
b111 1
b111 C
b111 H
b111 N
b10011 -
b10011 F
b10011 Q
b10000000110110011 .
b10000000110110011 K
b10000000110110011 P
b10000 7
b10000 b
b10000 c
b10000 2
b10000 `
b1100 8
b1100 a
b1100 3
b1100 M
b1100 d
1!
#160
b0 :
b0 _
b0 e
b0 *
b0 B
b0 U
b0 ]
0!
#170
b10 ,
b10 A
b10 E
0>
b10 =
b10 D
b10 I
b1 %
b1 @
b1 i
b11 4
b11 R
b11 h
b10 6
b10 S
b10 f
b0 1
b0 C
b0 H
b0 N
b110011 -
b110011 F
b110011 Q
b10100 7
b10100 b
b10100 c
b10100 2
b10100 `
b10000 8
b10000 a
b10000 3
b10000 M
b10000 d
1!
#180
b1 :
b1 _
b1 e
b1 *
b1 B
b1 U
b1 ]
0!
#190
bx .
bx K
bx P
b11000 7
b11000 b
b11000 c
b11000 2
b11000 `
b10100 8
b10100 a
b10100 3
b10100 M
b10100 d
1!
#200
0!
#210
0+
b0 =
b0 D
b0 I
bx &
bx ?
bx \
bx $
bx V
bx [
bx j
bx %
bx @
bx i
bx 4
bx R
bx h
bx 5
bx T
bx g
bx 6
bx S
bx f
bx 0
bx G
bx O
bx 1
bx C
bx H
bx N
bx -
bx F
bx Q
b11100 7
b11100 b
b11100 c
b11100 2
b11100 `
b11000 8
b11000 a
b11000 3
b11000 M
b11000 d
1!
#220
xW
bx Y
bx :
bx _
bx e
bx *
bx B
bx U
bx ]
0!
#230
b100000 7
b100000 b
b100000 c
b100000 2
b100000 `
b11100 8
b11100 a
b11100 3
b11100 M
b11100 d
1!
#240
0!
#250
b100100 7
b100100 b
b100100 c
b100100 2
b100100 `
b100000 8
b100000 a
b100000 3
b100000 M
b100000 d
1!
#260
0!
#270
b101000 7
b101000 b
b101000 c
b101000 2
b101000 `
b100100 8
b100100 a
b100100 3
b100100 M
b100100 d
1!
#280
0!
#290
b101100 7
b101100 b
b101100 c
b101100 2
b101100 `
b101000 8
b101000 a
b101000 3
b101000 M
b101000 d
1!
