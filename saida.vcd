$date
	Sun Aug 11 21:10:01 2024
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module tb_Processador $end
$scope module processa $end
$var wire 1 ! clock $end
$var wire 1 " reset $end
$var wire 1 # sinal_mux $end
$var wire 32 $ valor_reg2 [31:0] $end
$var wire 32 % valor_reg1 [31:0] $end
$var wire 32 & valor2 [31:0] $end
$var wire 1 ' sinal_leitura $end
$var wire 1 ( sinal_escrita $end
$var wire 1 ) resultado_desvio $end
$var wire 32 * resultado_alu [31:0] $end
$var wire 1 + reg_escrita $end
$var wire 4 , operacao_selecionada [3:0] $end
$var wire 7 - opcode [6:0] $end
$var wire 32 . instrucao_saida [31:0] $end
$var wire 32 / imm_estendido [31:0] $end
$var wire 7 0 funct7 [6:0] $end
$var wire 3 1 funct3 [2:0] $end
$var wire 32 2 endereco_soma4 [31:0] $end
$var wire 32 3 endereco_saida [31:0] $end
$var wire 5 4 endereco_regd [4:0] $end
$var wire 5 5 endereco_reg2 [4:0] $end
$var wire 5 6 endereco_reg1 [4:0] $end
$var wire 32 7 endereco_pc [31:0] $end
$var wire 32 8 endereco_desvio [31:0] $end
$var wire 32 9 dado_saida [31:0] $end
$var wire 32 : dado_escrita [31:0] $end
$var wire 1 ; branch $end
$var wire 1 < MemToReg $end
$var wire 2 = ALUop [1:0] $end
$var wire 1 > ALUSrc $end
$scope module alu_inst $end
$var wire 1 ! clock $end
$var wire 32 ? valor2 [31:0] $end
$var wire 32 @ valor1 [31:0] $end
$var wire 4 A resultado_alu_control [3:0] $end
$var reg 32 B resultado_alu [31:0] $end
$var reg 1 ) resultado_desvio $end
$upscope $end
$scope module alucontrol_inst $end
$var wire 3 C funct3 [2:0] $end
$var wire 2 D ALUop [1:0] $end
$var reg 4 E operacao_selecionada [3:0] $end
$upscope $end
$scope module controle_inst $end
$var wire 7 F opcode [6:0] $end
$var wire 7 G funct7 [6:0] $end
$var wire 3 H funct3 [2:0] $end
$var reg 1 > ALUSrc $end
$var reg 2 I ALUop [1:0] $end
$var reg 1 < MemToReg $end
$var reg 1 ; branch $end
$var reg 1 + reg_escrita $end
$var reg 1 ( sinal_escrita $end
$var reg 1 ' sinal_leitura $end
$upscope $end
$scope module immgen_inst $end
$var wire 7 J opcode [6:0] $end
$var wire 32 K instrucao [31:0] $end
$var reg 32 L imm_estendido [31:0] $end
$upscope $end
$scope module mem_inst $end
$var wire 32 M endereco [31:0] $end
$var reg 3 N funct3 [2:0] $end
$var reg 7 O funct7 [6:0] $end
$var reg 32 P instrucao_saida [31:0] $end
$var reg 7 Q opcode [6:0] $end
$var reg 5 R rd [4:0] $end
$var reg 5 S rs1 [4:0] $end
$var reg 5 T rs2 [4:0] $end
$upscope $end
$scope module memdados_inst $end
$var wire 1 ! clock $end
$var wire 32 U endereco [31:0] $end
$var wire 1 ( sinal_escrita $end
$var wire 1 ' sinal_leitura $end
$var wire 32 V valor_reg2 [31:0] $end
$var reg 1 W byte $end
$var reg 32 X dado_saida [31:0] $end
$var reg 6 Y temp [5:0] $end
$upscope $end
$scope module muxalu_inst $end
$var wire 1 > sinal_mux $end
$var wire 32 Z valor2 [31:0] $end
$var wire 32 [ valor1 [31:0] $end
$var wire 32 \ endereco_saida [31:0] $end
$upscope $end
$scope module muxmemreg_inst $end
$var wire 1 < sinal_mux $end
$var wire 32 ] valor1 [31:0] $end
$var wire 32 ^ valor2 [31:0] $end
$var wire 32 _ endereco_saida [31:0] $end
$upscope $end
$scope module muxpc_inst $end
$var wire 1 # sinal_mux $end
$var wire 32 ` valor1 [31:0] $end
$var wire 32 a valor2 [31:0] $end
$var wire 32 b endereco_saida [31:0] $end
$upscope $end
$scope module pc_inst $end
$var wire 1 ! clock $end
$var wire 32 c endereco_pc [31:0] $end
$var wire 1 " reset $end
$var reg 32 d endereco_saida [31:0] $end
$upscope $end
$scope module reg_inst $end
$var wire 1 ! clock $end
$var wire 32 e dado_escrita [31:0] $end
$var wire 5 f endereco_reg1 [4:0] $end
$var wire 5 g endereco_reg2 [4:0] $end
$var wire 5 h endereco_regd [4:0] $end
$var wire 1 + reg_escrita $end
$var reg 32 i valor_reg1 [31:0] $end
$var reg 32 j valor_reg2 [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx j
bx i
bx h
bx g
bx f
bx e
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
b0 ]
bx \
bx [
bx Z
b0 Y
bx X
0W
bx V
b0 U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
b0 B
bx A
bx @
bx ?
x>
bx =
x<
x;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
x+
b0 *
0)
x(
x'
bx &
bx %
bx $
0#
1"
0!
$end
#10
b0 8
b0 a
b0 /
b0 L
b0 Z
b1000010000000110110011 .
b1000010000000110110011 K
b1000010000000110110011 P
b100 7
b100 b
b100 c
b100 2
b100 `
b0 3
b0 M
b0 d
1!
#20
0!
#30
1!
#40
0!
#50
1!
#60
0!
#70
1!
#80
0!
#90
1!
#100
0!
0"
#110
b0 :
b0 _
b0 e
0<
0;
0>
1+
0(
0'
b10 =
b10 D
b10 I
b10 ,
b10 A
b10 E
b0 1
b0 C
b0 H
b0 N
b110011 -
b110011 F
b110011 J
b110011 Q
b1000 7
b1000 b
b1000 c
b1000 2
b1000 `
b100 8
b100 a
b100 3
b100 M
b100 d
1!
#120
xW
bx Y
bx :
bx _
bx e
bx *
bx B
bx U
bx ]
0!
#130
b10 &
b10 ?
b10 \
b10 $
b10 V
b10 [
b10 j
b10 %
b10 @
b10 i
b11 4
b11 R
b11 h
b10 5
b10 T
b10 g
b10 6
b10 S
b10 f
b0 0
b0 G
b0 O
b1001110000011 .
b1001110000011 K
b1001110000011 P
b1100 7
b1100 b
b1100 c
b1100 2
b1100 `
b1000 8
b1000 a
b1000 3
b1000 M
b1000 d
1!
#140
0W
b1 Y
b100 :
b100 _
b100 e
b100 *
b100 B
b100 U
b100 ]
0!
#150
b0 9
b0 X
b0 ^
b0 :
b0 _
b0 e
1<
1'
b0 =
b0 D
b0 I
b0 &
b0 ?
b0 \
b0 $
b0 V
b0 [
b0 j
b0 %
b0 @
b0 i
b10 ,
b10 A
b10 E
b111 4
b111 R
b111 h
b0 5
b0 T
b0 g
b0 6
b0 S
b0 f
b1 1
b1 C
b1 H
b1 N
b11 -
b11 F
b11 J
b11 Q
b1001000101100011 .
b1001000101100011 K
b1001000101100011 P
b10000 7
b10000 b
b10000 c
b10000 2
b10000 `
b1100 8
b1100 a
b1100 3
b1100 M
b1100 d
1!
#160
b1111 :
b1111 _
b1111 e
b1111 9
b1111 X
b1111 ^
b0 Y
b0 *
b0 B
b0 U
b0 ]
0!
#170
b0 :
b0 _
b0 e
b110 ,
b110 A
b110 E
0<
1;
0+
0'
b1 =
b1 D
b1 I
b111 %
b111 @
b111 i
b100000000010 /
b100000000010 L
b100000000010 Z
b10 4
b10 R
b10 h
b1 6
b1 S
b1 f
b1100011 -
b1100011 F
b1100011 J
b1100011 Q
b1000010000000110110011 .
b1000010000000110110011 K
b1000010000000110110011 P
b10100 7
b10100 b
b10100 c
b10100 2
b10100 `
b100000010010 8
b100000010010 a
b10000 3
b10000 M
b10000 d
1!
#180
b100000010010 7
b100000010010 b
b100000010010 c
1#
1W
b1 Y
b111 :
b111 _
b111 e
1)
b111 *
b111 B
b111 U
b111 ]
0!
#190
0#
b10 ,
b10 A
b10 E
0;
1+
b10 =
b10 D
b10 I
b10 &
b10 ?
b10 \
b10 $
b10 V
b10 [
b10 j
b10 %
b10 @
b10 i
b0 /
b0 L
b0 Z
b10 5
b10 T
b10 g
b10 6
b10 S
b10 f
b0 1
b0 C
b0 H
b0 N
b110011 -
b110011 F
b110011 J
b110011 Q
bx .
bx K
bx P
b100000010110 7
b100000010110 b
b100000010110 c
b100000010110 2
b100000010110 `
b100000010010 8
b100000010010 a
b100000010010 3
b100000010010 M
b100000010010 d
1!
#200
0W
b100 :
b100 _
b100 e
b100 *
b100 B
b100 U
b100 ]
0)
0!
#210
0+
b0 =
b0 D
b0 I
bx 4
bx R
bx h
bx 5
bx T
bx g
bx 6
bx S
bx f
bx 0
bx G
bx O
bx 1
bx C
bx H
bx N
bx -
bx F
bx J
bx Q
b100000011010 7
b100000011010 b
b100000011010 c
b100000011010 2
b100000011010 `
b100000010110 8
b100000010110 a
b100000010110 3
b100000010110 M
b100000010110 d
bx &
bx ?
bx \
bx %
bx @
bx i
bx $
bx V
bx [
bx j
1!
#220
xW
bx Y
bx :
bx _
bx e
bx *
bx B
bx U
bx ]
0!
#230
b100000011110 7
b100000011110 b
b100000011110 c
b100000011110 2
b100000011110 `
b100000011010 8
b100000011010 a
b100000011010 3
b100000011010 M
b100000011010 d
1!
#240
0!
#250
b100000100010 7
b100000100010 b
b100000100010 c
b100000100010 2
b100000100010 `
b100000011110 8
b100000011110 a
b100000011110 3
b100000011110 M
b100000011110 d
1!
#260
0!
#270
b100000100110 7
b100000100110 b
b100000100110 c
b100000100110 2
b100000100110 `
b100000100010 8
b100000100010 a
b100000100010 3
b100000100010 M
b100000100010 d
1!
#280
0!
#290
b100000101010 7
b100000101010 b
b100000101010 c
b100000101010 2
b100000101010 `
b100000100110 8
b100000100110 a
b100000100110 3
b100000100110 M
b100000100110 d
1!
