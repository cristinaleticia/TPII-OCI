$date
	Sun Aug 11 13:42:21 2024
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module tb_Processador $end
$scope module processa $end
$var wire 1 ! clock $end
$var wire 1 " reset $end
$var wire 1 # sinal_mux $end
$var wire 32 $ valor_reg2 [31:0] $end
$var wire 32 % valor_reg1 [31:0] $end
$var wire 32 & valor2 [31:0] $end
$var wire 1 ' sinal_leitura $end
$var wire 1 ( sinal_escrita $end
$var wire 1 ) resultado_desvio $end
$var wire 32 * resultado_alu [31:0] $end
$var wire 1 + reg_escrita $end
$var wire 4 , operacao_selecionada [3:0] $end
$var wire 7 - opcode [6:0] $end
$var wire 32 . instrucao_saida [31:0] $end
$var wire 32 / imm_estendido [31:0] $end
$var wire 12 0 imediato [11:0] $end
$var wire 7 1 funct7 [6:0] $end
$var wire 3 2 funct3 [2:0] $end
$var wire 32 3 endereco_soma4 [31:0] $end
$var wire 32 4 endereco_saida [31:0] $end
$var wire 5 5 endereco_regd [4:0] $end
$var wire 5 6 endereco_reg2 [4:0] $end
$var wire 5 7 endereco_reg1 [4:0] $end
$var wire 32 8 endereco_pc [31:0] $end
$var wire 32 9 endereco_desvio [31:0] $end
$var wire 32 : dado_saida [31:0] $end
$var wire 32 ; dado_escrita [31:0] $end
$var wire 1 < branch $end
$var wire 1 = MemToReg $end
$var wire 2 > ALUop [1:0] $end
$var wire 1 ? ALUSrc $end
$scope module alu_inst $end
$var wire 1 ! clock $end
$var wire 32 @ valor2 [31:0] $end
$var wire 32 A valor1 [31:0] $end
$var wire 4 B resultado_alu_control [3:0] $end
$var reg 32 C resultado_alu [31:0] $end
$var reg 1 ) resultado_desvio $end
$upscope $end
$scope module alucontrol_inst $end
$var wire 3 D funct3 [2:0] $end
$var wire 2 E ALUop [1:0] $end
$var reg 4 F operacao_selecionada [3:0] $end
$upscope $end
$scope module controle_inst $end
$var wire 7 G opcode [6:0] $end
$var wire 7 H funct7 [6:0] $end
$var wire 3 I funct3 [2:0] $end
$var reg 1 ? ALUSrc $end
$var reg 2 J ALUop [1:0] $end
$var reg 1 = MemToReg $end
$var reg 1 < branch $end
$var reg 1 + reg_escrita $end
$var reg 1 ( sinal_escrita $end
$var reg 1 ' sinal_leitura $end
$upscope $end
$scope module immgen_inst $end
$var wire 12 K imediato [11:0] $end
$var reg 32 L imm_estendido [31:0] $end
$upscope $end
$scope module mem_inst $end
$var wire 32 M endereco [31:0] $end
$var reg 3 N funct3 [2:0] $end
$var reg 7 O funct7 [6:0] $end
$var reg 12 P imediato [11:0] $end
$var reg 32 Q instrucao_saida [31:0] $end
$var reg 7 R opcode [6:0] $end
$var reg 5 S rd [4:0] $end
$var reg 5 T rs1 [4:0] $end
$var reg 5 U rs2 [4:0] $end
$upscope $end
$scope module memdados_inst $end
$var wire 1 ! clock $end
$var wire 32 V endereco [31:0] $end
$var wire 1 ( sinal_escrita $end
$var wire 1 ' sinal_leitura $end
$var wire 32 W valor_reg2 [31:0] $end
$var reg 1 X byte $end
$var reg 32 Y dado_saida [31:0] $end
$var reg 6 Z temp [5:0] $end
$upscope $end
$scope module muxalu_inst $end
$var wire 1 ? sinal_mux $end
$var wire 32 [ valor2 [31:0] $end
$var wire 32 \ valor1 [31:0] $end
$var wire 32 ] endereco_saida [31:0] $end
$upscope $end
$scope module muxmemreg_inst $end
$var wire 1 = sinal_mux $end
$var wire 32 ^ valor1 [31:0] $end
$var wire 32 _ valor2 [31:0] $end
$var wire 32 ` endereco_saida [31:0] $end
$upscope $end
$scope module muxpc_inst $end
$var wire 1 # sinal_mux $end
$var wire 32 a valor1 [31:0] $end
$var wire 32 b valor2 [31:0] $end
$var wire 32 c endereco_saida [31:0] $end
$upscope $end
$scope module pc_inst $end
$var wire 1 ! clock $end
$var wire 32 d endereco_pc [31:0] $end
$var wire 1 " reset $end
$var reg 32 e endereco_saida [31:0] $end
$upscope $end
$scope module reg_inst $end
$var wire 1 ! clock $end
$var wire 32 f dado_escrita [31:0] $end
$var wire 5 g endereco_reg1 [4:0] $end
$var wire 5 h endereco_reg2 [4:0] $end
$var wire 5 i endereco_regd [4:0] $end
$var wire 1 + reg_escrita $end
$var reg 32 j valor_reg1 [31:0] $end
$var reg 32 k valor_reg2 [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx k
bx j
bx i
bx h
bx g
bx f
bx e
bx d
bx c
bx b
bx a
bx `
bx _
b0 ^
bx ]
bx \
bx [
b0 Z
bx Y
0X
bx W
b0 V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
b0 C
bx B
bx A
bx @
x?
bx >
x=
x<
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
x+
b0 *
0)
x(
x'
bx &
bx %
bx $
0#
1"
0!
$end
#10
b10000000110110011 .
b10000000110110011 Q
b100 8
b100 c
b100 d
b100 3
b100 a
b0 4
b0 M
b0 e
1!
#20
0!
#30
1!
#40
0!
#50
1!
#60
0!
#70
1!
#80
0!
#90
1!
#100
0!
0"
#110
b0 ;
b0 `
b0 f
0=
0<
0?
1+
0(
0'
b10 >
b10 E
b10 J
b10 ,
b10 B
b10 F
b0 2
b0 D
b0 I
b0 N
b110011 -
b110011 G
b110011 R
b1000 8
b1000 c
b1000 d
b1000 3
b1000 a
b100 4
b100 M
b100 e
1!
#120
xX
bx Z
bx ;
bx `
bx f
bx *
bx C
bx V
bx ^
0!
#130
b0 &
b0 @
b0 ]
b0 $
b0 W
b0 \
b0 k
b1 %
b1 A
b1 j
b11 5
b11 S
b11 i
b0 6
b0 U
b0 h
b10 7
b10 T
b10 g
b0 1
b0 H
b0 O
b100001110001000110011 .
b100001110001000110011 Q
b1100 8
b1100 c
b1100 d
b1100 3
b1100 a
b1000 4
b1000 M
b1000 e
1!
#140
0X
b0 Z
b1 ;
b1 `
b1 f
b1 *
b1 C
b1 V
b1 ^
0!
#150
b10 &
b10 @
b10 ]
b10 $
b10 W
b10 \
b10 k
b10 %
b10 A
b10 j
b1 ,
b1 B
b1 F
b100 5
b100 S
b100 i
b1 6
b1 U
b1 h
b1 7
b1 T
b1 g
b110 2
b110 D
b110 I
b110 N
b100010001001000110011 .
b100010001001000110011 Q
b10000 8
b10000 c
b10000 d
b10000 3
b10000 a
b1100 4
b1100 M
b1100 e
1!
#160
1X
b10 ;
b10 `
b10 f
b10 *
b10 C
b10 V
b10 ^
0!
#170
b1 %
b1 A
b1 j
b11 ,
b11 B
b11 F
b10 7
b10 T
b10 g
b1 2
b1 D
b1 I
b1 N
b1001100000011 .
b1001100000011 Q
b10100 8
b10100 c
b10100 d
b10100 3
b10100 a
b10000 4
b10000 M
b10000 e
1!
#180
0X
b1 Z
b100 ;
b100 `
b100 f
b100 *
b100 C
b100 V
b100 ^
0!
#190
b0 :
b0 Y
b0 _
b0 ;
b0 `
b0 f
b10 ,
b10 B
b10 F
1=
1'
b0 >
b0 E
b0 J
b0 &
b0 @
b0 ]
b0 $
b0 W
b0 \
b0 k
b0 %
b0 A
b0 j
b110 5
b110 S
b110 i
b0 6
b0 U
b0 h
b0 7
b0 T
b0 g
b11 -
b11 G
b11 R
b10000000001000000100011 .
b10000000001000000100011 Q
b11000 8
b11000 c
b11000 d
b11000 3
b11000 a
b10100 4
b10100 M
b10100 e
1!
#200
b1111 ;
b1111 `
b1111 f
b1111 :
b1111 Y
b1111 _
b0 Z
b0 *
b0 C
b0 V
b0 ^
0!
#210
b0 ;
b0 `
b0 f
b100 &
b100 @
b100 ]
0=
1?
0+
1(
0'
b11100 9
b11100 b
b100 /
b100 L
b100 [
b0 5
b0 S
b0 i
b100 0
b100 K
b100 P
b100011 -
b100011 G
b100011 R
bx .
bx Q
b11100 8
b11100 c
b11100 d
b11100 3
b11100 a
b11000 4
b11000 M
b11000 e
1!
#220
b1 Z
b100 ;
b100 `
b100 f
b100 *
b100 C
b100 V
b100 ^
0!
#230
0?
0(
bx &
bx @
bx ]
bx $
bx W
bx \
bx k
bx %
bx A
bx j
bx /
bx L
bx [
bx 6
bx U
bx h
bx 7
bx T
bx g
bx 0
bx K
bx P
bx 2
bx D
bx I
bx N
bx -
bx G
bx R
b100000 8
b100000 c
b100000 d
b100000 3
b100000 a
bx 9
bx b
b11100 4
b11100 M
b11100 e
1!
#240
xX
bx Z
bx ;
bx `
bx f
bx *
bx C
bx V
bx ^
0!
#250
b100100 8
b100100 c
b100100 d
b100100 3
b100100 a
b100000 4
b100000 M
b100000 e
1!
#260
0!
#270
b101000 8
b101000 c
b101000 d
b101000 3
b101000 a
b100100 4
b100100 M
b100100 e
1!
#280
0!
#290
b101100 8
b101100 c
b101100 d
b101100 3
b101100 a
b101000 4
b101000 M
b101000 e
1!
#300
0!
#310
b110000 8
b110000 c
b110000 d
b110000 3
b110000 a
b101100 4
b101100 M
b101100 e
1!
